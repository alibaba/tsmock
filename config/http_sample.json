{
  "type": "httpMockConfig",
  "baseUrl": "/mock",
  "defaults": {
    "body": "{\"matched\":\"default body\"}",
    "contentType": "application/json;charset=utf8",
    "statusCode": 200
  },
  "host": "0.0.0.0",
  "log": {
    "logBody": true,
    "logLevel": "INFO"
  },
  "port": 8848,
  "routeTable": [
    {
      "name": "[Match]--[GET]+[Path]",
      "request": {
        "path": "/get-path",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Path]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[POST]+[Path]",
      "request": {
        "path": "/post-path",
        "method": "POST"
      },
      "response": {
        "body": "{\"matched\":\"[POST]+[Path]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[PUT]+[Path]",
      "request": {
        "path": "/put-path",
        "method": "PUT"
      },
      "response": {
        "body": "{\"matched\":\"[PUT]+[Path]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[DELETE]+[Path]",
      "request": {
        "path": "/delete-path",
        "method": "DELETE"
      },
      "response": {
        "body": "{\"matched\":\"[DELETE]+[Path]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[GET]+[Path]+[1 query param name]",
      "request": {
        "queryParams": [
          {
            "name": "query-param-name1"
          }
        ],
        "path": "/get-path",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Path]+[1 query param name]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[GET]+[Path]+[1 query param name]+[1 query param value]",
      "request": {
        "queryParams": [
          {
            "name": "query-param-name1",
            "values": [
              "query-param-value1"
            ]
          }
        ],
        "path": "/get-path",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Path]+[1 query param name]+[1 query param value]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[GET]+[Path]+[1 query param name]+[2 query param values]",
      "request": {
        "queryParams": [
          {
            "name": "query-param-name1",
            "values": [
              "query-param-value1",
              "query-param-value2"
            ]
          }
        ],
        "path": "/get-path",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Path]+[1 query param name]+[2 query param value]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[GET]+[Path]+[2 query param names]+[2 query param values]",
      "request": {
        "queryParams": [
          {
            "name": "query-param-name1",
            "values": [
              "query-param-value1"
            ]
          },
          {
            "name": "query-param-name2",
            "values": [
              "query-param-value2"
            ]
          }
        ],
        "path": "/get-path",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Path]+[2 query param names]+[2 query param value]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[POST]+[Path]+[1 form param name]",
      "request": {
        "formParams": [
          {
            "name": "form-param-name1"
          }
        ],
        "path": "/post-path",
        "method": "POST"
      },
      "response": {
        "body": "{\"matched\":\"[POST]+[Path]+[1 form param name]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[POST]+[Path]+[1 form param name]+[1 form param value]",
      "request": {
        "formParams": [
          {
            "name": "form-param-name1",
            "value": "form-param-value1"
          }
        ],
        "path": "/post-path",
        "method": "POST"
      },
      "response": {
        "body": "{\"matched\":\"[POST]+[Path]+[1 form param name]+[1 form param value]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[POST]+[Path]+[2 form param value]+[2 form param value]",
      "request": {
        "formParams": [
          {
            "name": "form-param-name1",
            "value": "form-param-value1"
          },
          {
            "name": "form-param-name2",
            "value": "form-param-value2"
          }
        ],
        "path": "/post-path",
        "method": "POST"
      },
      "response": {
        "body": "{\"matched\":\"[POST]+[Path]+[2 form param name]+[2 form param value]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[POST]+[Path]+[Body regex]",
      "request": {
        "path": "/post-path",
        "bodyRegex": "^test:body$",
        "method": "POST"
      },
      "response": {
        "body": "{\"matched\":\"[POST]+[Path]+[Body regex]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[BodyPointingToFile]",
      "request": {
        "path": "/body-point-to-file",
        "method": "GET"
      },
      "response": {
        "body": "src/test/data/utbody.json",
        "bodyPointingToFile": true,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[Default Response]",
      "request": {
        "path": "/body-default-response",
        "method": "GET"
      },
      "response": {
        "bodyPointingToFile": false,
        "headers": []
      }
    },
    {
      "name": "[Match]--[Sleep in response]",
      "request": {
        "path": "/get-sleep",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Path]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "sleep": 5000,
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[Compress]",
      "request": {
        "path": "/get-compress",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[GET]+[Compress]\"}",
        "bodyPointingToFile": false,
        "compress": "gzip",
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[Script in request]+[Save request]",
      "request": {
        "path": "/post-script-save-request",
        "bodyRegex": "^test:body$",
        "method": "POST",
        "script": "src/test/script/http/request/save_request.bsh"
      },
      "response": {
        "body": "{\"matched\":\"[Script in request]+[Save request]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[Script in request]+[Validate request]",
      "request": {
        "path": "/post-script-validate-request",
        "bodyRegex": "^test:body$",
        "method": "POST",
        "script": "src/test/script/http/request/validate_request.bsh"
      },
      "response": {
        "body": "{\"matched\":\"[Script in request]+[Validate request]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[Script in response]+[Transform response]",
      "request": {
        "path": "/post-script-transform-response",
        "bodyRegex": "^test:body$",
        "method": "POST"
      },
      "response": {
        "body": "{\"matched\":\"<body>\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "script": "src/test/script/http/response/transform_response.bsh",
        "statusCode": 200
      }
    },
    {
      "name": "[Match]--[proxy]",
      "proxy": {
        "enabled": true,
        "targetUrl": "http://localhost:8848/mock/get-path"
      },
      "request": {
        "queryParams": [
          {
            "name": "query-param-name1",
            "values": [
              "query-param-value1"
            ]
          }
        ],
        "path": "/get-proxy",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[Proxy]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=utf8",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "callbacks": [
        {
          "info": "method=POST,url=http://localhost:8848/mock/post-path",
          "type": "http",
          "value": "{\"callback\":\"http-post\"}"
        }
      ],
      "name": "[Match]--[Callback]+[Http]",
      "request": {
        "path": "/get-callback-http",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[Callback]+[Http]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "callbacks": [
        {
          "info": "producer=testprocecer,topic=testtopic,tag=testtag,key=testkey",
          "type": "mq",
          "value": "{\"callback\":\"mq\"}"
        }
      ],
      "name": "[Match]--[Callback]+[MQ]",
      "request": {
        "path": "/get-callback-mq",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[Callback]+[MQ]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "callbacks": [
        {
          "info": "url=ws://lcoalhost:8848/mock/websocket",
          "type": "websocket",
          "value": "{\"callback\":\"websocket\"}"
        }
      ],
      "name": "[Match]--[Callback]+[Websocket]",
      "request": {
        "path": "/get-callback-websocket",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[Callback]+[Websocket]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "callbacks": [
        {
          "info": "method=POST,url=http://localhost:8848/mock/post-path",
          "sleep": 5000,
          "type": "http",
          "value": "{\"callback\":\"http-post\"}"
        }
      ],
      "name": "[Match]--[Sleep in callback]",
      "request": {
        "path": "/get-callback-http",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[Callback]+[Http]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    },
    {
      "callbacks": [
        {
          "info": "method=POST,url=http://localhost:8848/mock/post-path",
          "script": "src/test/script/http/callback/transform_callback.bsh",
          "type": "http",
          "value": "<callbackbody>"
        }
      ],
      "name": "[Match]--[Script in callback]",
      "request": {
        "path": "/get-callback-http",
        "method": "GET"
      },
      "response": {
        "body": "{\"matched\":\"[Callback]+[Http]\"}",
        "bodyPointingToFile": false,
        "contentType": "application/json;charset=gbk",
        "headers": [],
        "statusCode": 200
      }
    }
  ],
  "serverOptions": [
    {
      "name": "REQUEST_PARSE_TIMEOUT",
      "value": "100000"
    }
  ]
}